# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: root_password
          MYSQL_USER: test_user
          MYSQL_PASSWORD: test_password
          MYSQL_DATABASE: test_db
          CORS_ORIGIN: "http://localhost:3000,http://example.com"
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 -u test_user --password=test_password"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    env:
      NODE_ENV: test
      DB_HOST_TEST: 127.0.0.1
      DB_USER_TEST: test_user
      DB_PASSWORD_TEST: test_password
      DB_NAME_TEST: test_db
      DB_DIALECT: mysql
      JWT_SECRET: your_jwt_secret

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          # cache: 'npm'

      - name: Install Dependencies
        run: npm install

      - name: Set environment variables
        run: echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> $GITHUB_ENV

      - name: Build the Application
        run: npm run build --if-present

      - name: Wait for Database to be Ready
        run: |
          until mysqladmin ping -h $DB_HOST_TEST -u $DB_USER_TEST --password=$DB_PASSWORD_TEST; do
            echo "Waiting for database connection..."
            sleep 3
          done

      - name: Run Database Migrations
        env:
          DATABASE_URL: mysql://test_user:test_password@127.0.0.1:3306/test_db
        run: |
          echo "Running migrations..."
          npx sequelize-cli db:migrate
          echo "Migrations completed successfully." --config src/config/config-wrapper.cjs

      - name: Run Tests
        run: npm test
